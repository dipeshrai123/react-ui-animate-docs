"use strict";(self.webpackChunkreact_ui_animate_docs=self.webpackChunkreact_ui_animate_docs||[]).push([[2443],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(n),c=r,k=d["".concat(u,".").concat(c)]||d[c]||p[c]||i;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5573:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return c},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:2,id:"use-mounted-value",title:"useMountedValue"},u=void 0,s={unversionedId:"api-references/hooks/use-mounted-value",id:"version-1.4.6/api-references/hooks/use-mounted-value",title:"useMountedValue",description:"Due to time constraint, we couldn't complete this page. We will complete as soon as possible.",source:"@site/versioned_docs/version-1.4.6/api-references/hooks/use-mounted-value.md",sourceDirName:"api-references/hooks",slug:"/api-references/hooks/use-mounted-value",permalink:"/docs/1.4.6/api-references/hooks/use-mounted-value",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.4.6/api-references/hooks/use-mounted-value.md",tags:[],version:"1.4.6",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"use-mounted-value",title:"useMountedValue"},sidebar:"tutorialSidebar",previous:{title:"useAnimatedValue",permalink:"/docs/1.4.6/api-references/hooks/use-animated-value"},next:{title:"useOutsideClick",permalink:"/docs/1.4.6/api-references/hooks/use-outside-value"}},m={},p=[{value:"Arguments",id:"arguments",level:2},{value:"<code>initialState</code>  boolean ",id:"initialstate--boolean-",level:4},{value:"<code>config</code>  object ",id:"config--object-",level:4},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}],d={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Due to time constraint, we couldn't complete this page. We will complete as soon as possible."))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"useMountedValue")," is used for mounting and unmounting of a component with transition. ",(0,i.kt)("inlineCode",{parentName:"p"},"useMountedValue")," returns a function when a state and phases are passed as first and second arguments. The first argument must be a ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," state and second argument is an ",(0,i.kt)("inlineCode",{parentName:"p"},"object")," with three phases property, ",(0,i.kt)("inlineCode",{parentName:"p"},"from"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enter")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"exit"),". The phases ",(0,i.kt)("inlineCode",{parentName:"p"},"from"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enter")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"exit")," are three numeric values which defines the transition lifecycle of a component when it mounts and unmounts."),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("h4",{id:"initialstate--boolean-"},(0,i.kt)("inlineCode",{parentName:"h4"},"initialState")," ","[ boolean ]"),(0,i.kt)("p",null,"The first argument is ",(0,i.kt)("inlineCode",{parentName:"p"},"initialState")," which determines the current mounting state of a component. Changes to it triggers the animation and mounting/unmounting of component occurs."),(0,i.kt)("h4",{id:"config--object-"},(0,i.kt)("inlineCode",{parentName:"h4"},"config")," ","[ object ]"),(0,i.kt)("p",null,"Optional ",(0,i.kt)("inlineCode",{parentName:"p"},"object")," containing the animation configuration. Allowed parameters are listed below:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Options"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"from"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"Initial state of animation value when component mounts")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"enter"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"Animation value animates from ",(0,i.kt)("inlineCode",{parentName:"td"},"from")," phase to ",(0,i.kt)("inlineCode",{parentName:"td"},"enter")," phase when component mounts")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"exit"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"Animation value animates from ",(0,i.kt)("inlineCode",{parentName:"td"},"enter")," phase to ",(0,i.kt)("inlineCode",{parentName:"td"},"exit")," phase when state is false and component unmounts")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"config?"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"Animation configuration object")))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"config")," object is animation configuration object with following properties:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Options"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"animationType"),(0,i.kt)("td",{parentName:"tr",align:null},'"ease"'),(0,i.kt)("td",{parentName:"tr",align:null},"Default spring type animation")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"mass"),(0,i.kt)("td",{parentName:"tr",align:null},"1"),(0,i.kt)("td",{parentName:"tr",align:null},"Spring mass")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"friction"),(0,i.kt)("td",{parentName:"tr",align:null},"26"),(0,i.kt)("td",{parentName:"tr",align:null},"Spring friction")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"tension"),(0,i.kt)("td",{parentName:"tr",align:null},"170"),(0,i.kt)("td",{parentName:"tr",align:null},"Spring energy")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"immediate"),(0,i.kt)("td",{parentName:"tr",align:null},"false"),(0,i.kt)("td",{parentName:"tr",align:null},"If true, the animation is not applied rather updates are immediate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"duration"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"How long the animation should last, if > than 0 switch to a duration-based animation instead of spring physics")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easing"),(0,i.kt)("td",{parentName:"tr",align:null},"t => t"),(0,i.kt)("td",{parentName:"tr",align:null},"Linear by default, you can use Easing module.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onAnimationEnd"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"Function called after animation is completed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"listener"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"Function called every time the value is updated.")))),(0,i.kt)("h2",{id:"returns"},"Returns"),(0,i.kt)("p",null,"It returns a function which takes a callback function with arguments: Animated Value as first argument and boolean defining current state as second argument."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const mountedFunction = useMountedValue(boolean, {\n  from: 0,\n  enter: 1,\n  exit: 0,\n});\n")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"In the below example, ",(0,i.kt)("inlineCode",{parentName:"p"},"open")," function receives a callback that receives two arguments: the Animated Value and a boolean respectively. The first argument, Animated Value animates from ",(0,i.kt)("inlineCode",{parentName:"p"},"from = 0")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"enter = 1")," when the visible is true and ",(0,i.kt)("inlineCode",{parentName:"p"},"enter = 1")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"exit = 0")," when visible is false. And the second argument, boolean dinamically determines whether the component is mounted or not after animation. ",(0,i.kt)("inlineCode",{parentName:"p"},"AnimatedBlock")," HOC is used to read animated values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useState } from 'react';\nimport { useMountedValue } from 'react-ui-animate';\n\nfunction SomeComponent() {\n  const [visible, setVisible] = useState(false);\n\n  const open = useMountedValue(visible, { from: 0, enter: 1, exit: 0 });\n\n  return (\n    <div>\n      {open(\n        (animation, mounted) =>\n          mounted && (\n            <AnimatedBlock\n              style={{\n                width: 100,\n                height: 100,\n                backgroundColor: '#3399ff',\n                opacity: animation.value,\n              }}\n            />\n          )\n      )}\n\n      <button onClick={() => setVisible((prev) => !prev)}>CLICK ME</button>\n    </div>\n  );\n}\n")))}c.isMDXComponent=!0}}]);