"use strict";(self.webpackChunkreact_ui_animate_docs=self.webpackChunkreact_ui_animate_docs||[]).push([[603],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2550:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:8,id:"use-drag",title:"useDrag"},s=void 0,u={unversionedId:"api-references/hooks/use-drag",id:"api-references/hooks/use-drag",title:"useDrag",description:"Due to time constraint, we couldn't complete this page. We will complete as soon as possible.",source:"@site/docs/api-references/hooks/use-drag.md",sourceDirName:"api-references/hooks",slug:"/api-references/hooks/use-drag",permalink:"/docs/api-references/hooks/use-drag",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-references/hooks/use-drag.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,id:"use-drag",title:"useDrag"},sidebar:"tutorialSidebar",previous:{title:"useMouseMove",permalink:"/docs/api-references/hooks/use-mouse-move"},next:{title:"useWheel",permalink:"/docs/api-references/hooks/use-wheel"}},p={},d=[{value:"Arguments",id:"arguments",level:2},{value:"<code>callback</code>  function ",id:"callback--function-",level:4},{value:"<code>config</code>  object ",id:"config--object-",level:4},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Due to time constraint, we couldn't complete this page. We will complete as soon as possible."))),(0,o.kt)("p",null,"This hook provides a way to make any ",(0,o.kt)("inlineCode",{parentName:"p"},"HTMLElement")," draggable."),(0,o.kt)("h2",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"callback--function-"},(0,o.kt)("inlineCode",{parentName:"h4"},"callback")," ","[ function ]"),(0,o.kt)("p",null,"First argument is a callback function with a drag ",(0,o.kt)("inlineCode",{parentName:"p"},"event")," object as its first argument which is called on every drag event."),(0,o.kt)("p",null,"Here are the properties of an ",(0,o.kt)("inlineCode",{parentName:"p"},"event")," object argument of a callback function:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"args"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Array")," of argument passed in bind function.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"down"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Boolean")," indicating the mouse click state.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"movementX"),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of movement in x-axis. Always starts from 0 while dragging.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"movementY"),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of movement in y-axis. Always starts from 0 while dragging.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"offsetX"),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of movement with offset in x-axis. It saves the previous movement and drag starts from previous position.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"offsetY"),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of movement with offset in y-axis. It saves the previous movement and drag starts from previous position.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"velocityX"),(0,o.kt)("td",{parentName:"tr",align:null},"Velocity along horizontal drag direction.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"velocityY"),(0,o.kt)("td",{parentName:"tr",align:null},"Velocity along vertical drag direction.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"directionX"),(0,o.kt)("td",{parentName:"tr",align:null},"Indicates the current horizontal drag direction. For positive +1, for negative -1 and for not dragging 0.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"directionY"),(0,o.kt)("td",{parentName:"tr",align:null},"Indicates the current vertical drag direction. For positive +1, for negative -1 and for not dragging 0.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"distanceX"),(0,o.kt)("td",{parentName:"tr",align:null},"Same as movementX but always positive.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"distanceY"),(0,o.kt)("td",{parentName:"tr",align:null},"Same as movementY but always positive.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"cancel"),(0,o.kt)("td",{parentName:"tr",align:null},"Function to cancel the current drag gesture.")))),(0,o.kt)("h4",{id:"config--object-"},(0,o.kt)("inlineCode",{parentName:"h4"},"config")," ","[ object ]"),(0,o.kt)("p",null,"The second argument is an optional object which is called every time on mouse / pointer down event."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Options"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"initial"),(0,o.kt)("td",{parentName:"tr",align:null},"undefined"),(0,o.kt)("td",{parentName:"tr",align:null},"Function called initially on mouse / pointer down. It must return an object with ",(0,o.kt)("inlineCode",{parentName:"td"},"movementX")," and ",(0,o.kt)("inlineCode",{parentName:"td"},"movementY")," properties.")))),(0,o.kt)("h2",{id:"returns"},"Returns"),(0,o.kt)("p",null,"It returns a function which is spread on any ",(0,o.kt)("inlineCode",{parentName:"p"},"HTMLELement"),"."),(0,o.kt)("p",null,"Define a bind function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const bind = useDrag((event) => doSomething(event));\n")),(0,o.kt)("p",null,"Apply it on a ",(0,o.kt)("inlineCode",{parentName:"p"},"HTMLELement"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"<div {...bind()} style={{ width: 100, height: 100, backgroundColor: 'red' }} />\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"In the below example, ",(0,o.kt)("inlineCode",{parentName:"p"},"useDrag")," hook is used to make a ",(0,o.kt)("inlineCode",{parentName:"p"},"HTMLElement")," draggable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useAnimatedValue, useDrag, AnimatedBlock } from 'react-ui-animate';\n\nexport default function () {\n  const left = useAnimatedValue(0);\n\n  const bind = useDrag(function ({ offsetX }) {\n    left.value = offsetX;\n  });\n\n  return (\n    <AnimatedBlock\n      {...bind()} // bind here\n      style={{\n        width: 100,\n        height: 100,\n        backgroundColor: '#3399ff',\n        position: 'absolute',\n        left: left.value,\n        top: 0,\n      }}\n    />\n  );\n}\n")))}m.isMDXComponent=!0}}]);